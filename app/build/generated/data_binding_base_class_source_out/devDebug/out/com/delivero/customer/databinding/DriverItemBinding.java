// Generated by view binder compiler. Do not edit!
package com.delivero.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.delivero.customer.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DriverItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialTextView arrivalTime;

  @NonNull
  public final MaterialTextView cost;

  @NonNull
  public final MaterialTextView numberPlate;

  @NonNull
  public final ShapeableImageView riderLogo;

  @NonNull
  public final MaterialTextView riderName;

  @NonNull
  public final MaterialButton selectRider;

  private DriverItemBinding(@NonNull RelativeLayout rootView, @NonNull MaterialTextView arrivalTime,
      @NonNull MaterialTextView cost, @NonNull MaterialTextView numberPlate,
      @NonNull ShapeableImageView riderLogo, @NonNull MaterialTextView riderName,
      @NonNull MaterialButton selectRider) {
    this.rootView = rootView;
    this.arrivalTime = arrivalTime;
    this.cost = cost;
    this.numberPlate = numberPlate;
    this.riderLogo = riderLogo;
    this.riderName = riderName;
    this.selectRider = selectRider;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DriverItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DriverItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.driver_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DriverItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrivalTime;
      MaterialTextView arrivalTime = ViewBindings.findChildViewById(rootView, id);
      if (arrivalTime == null) {
        break missingId;
      }

      id = R.id.cost;
      MaterialTextView cost = ViewBindings.findChildViewById(rootView, id);
      if (cost == null) {
        break missingId;
      }

      id = R.id.numberPlate;
      MaterialTextView numberPlate = ViewBindings.findChildViewById(rootView, id);
      if (numberPlate == null) {
        break missingId;
      }

      id = R.id.riderLogo;
      ShapeableImageView riderLogo = ViewBindings.findChildViewById(rootView, id);
      if (riderLogo == null) {
        break missingId;
      }

      id = R.id.riderName;
      MaterialTextView riderName = ViewBindings.findChildViewById(rootView, id);
      if (riderName == null) {
        break missingId;
      }

      id = R.id.selectRider;
      MaterialButton selectRider = ViewBindings.findChildViewById(rootView, id);
      if (selectRider == null) {
        break missingId;
      }

      return new DriverItemBinding((RelativeLayout) rootView, arrivalTime, cost, numberPlate,
          riderLogo, riderName, selectRider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
