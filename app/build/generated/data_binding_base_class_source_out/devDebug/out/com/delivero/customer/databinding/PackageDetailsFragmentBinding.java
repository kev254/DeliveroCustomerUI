// Generated by view binder compiler. Do not edit!
package com.delivero.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.delivero.customer.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PackageDetailsFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final TextInputLayout descriptionLayout;

  @NonNull
  public final View div2;

  @NonNull
  public final View div3;

  @NonNull
  public final View div4;

  @NonNull
  public final View div5;

  @NonNull
  public final RelativeLayout hideFor;

  @NonNull
  public final TextInputEditText packageDescription;

  @NonNull
  public final TextInputEditText pickupDate;

  @NonNull
  public final TextInputLayout pickupDateLayout;

  @NonNull
  public final TextInputEditText pickupTime;

  @NonNull
  public final TextInputEditText pickupType;

  @NonNull
  public final TextInputLayout timeLayout;

  @NonNull
  public final TextInputLayout typeLayout;

  @NonNull
  public final TextInputEditText weightInput;

  @NonNull
  public final TextInputLayout weightLayout;

  private PackageDetailsFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton btnNext, @NonNull TextInputLayout descriptionLayout,
      @NonNull View div2, @NonNull View div3, @NonNull View div4, @NonNull View div5,
      @NonNull RelativeLayout hideFor, @NonNull TextInputEditText packageDescription,
      @NonNull TextInputEditText pickupDate, @NonNull TextInputLayout pickupDateLayout,
      @NonNull TextInputEditText pickupTime, @NonNull TextInputEditText pickupType,
      @NonNull TextInputLayout timeLayout, @NonNull TextInputLayout typeLayout,
      @NonNull TextInputEditText weightInput, @NonNull TextInputLayout weightLayout) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.descriptionLayout = descriptionLayout;
    this.div2 = div2;
    this.div3 = div3;
    this.div4 = div4;
    this.div5 = div5;
    this.hideFor = hideFor;
    this.packageDescription = packageDescription;
    this.pickupDate = pickupDate;
    this.pickupDateLayout = pickupDateLayout;
    this.pickupTime = pickupTime;
    this.pickupType = pickupType;
    this.timeLayout = timeLayout;
    this.typeLayout = typeLayout;
    this.weightInput = weightInput;
    this.weightLayout = weightLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PackageDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PackageDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.package_details_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PackageDetailsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      MaterialButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.descriptionLayout;
      TextInputLayout descriptionLayout = ViewBindings.findChildViewById(rootView, id);
      if (descriptionLayout == null) {
        break missingId;
      }

      id = R.id.div2;
      View div2 = ViewBindings.findChildViewById(rootView, id);
      if (div2 == null) {
        break missingId;
      }

      id = R.id.div3;
      View div3 = ViewBindings.findChildViewById(rootView, id);
      if (div3 == null) {
        break missingId;
      }

      id = R.id.div4;
      View div4 = ViewBindings.findChildViewById(rootView, id);
      if (div4 == null) {
        break missingId;
      }

      id = R.id.div5;
      View div5 = ViewBindings.findChildViewById(rootView, id);
      if (div5 == null) {
        break missingId;
      }

      id = R.id.hideFor;
      RelativeLayout hideFor = ViewBindings.findChildViewById(rootView, id);
      if (hideFor == null) {
        break missingId;
      }

      id = R.id.packageDescription;
      TextInputEditText packageDescription = ViewBindings.findChildViewById(rootView, id);
      if (packageDescription == null) {
        break missingId;
      }

      id = R.id.pickupDate;
      TextInputEditText pickupDate = ViewBindings.findChildViewById(rootView, id);
      if (pickupDate == null) {
        break missingId;
      }

      id = R.id.pickupDateLayout;
      TextInputLayout pickupDateLayout = ViewBindings.findChildViewById(rootView, id);
      if (pickupDateLayout == null) {
        break missingId;
      }

      id = R.id.pickupTime;
      TextInputEditText pickupTime = ViewBindings.findChildViewById(rootView, id);
      if (pickupTime == null) {
        break missingId;
      }

      id = R.id.pickupType;
      TextInputEditText pickupType = ViewBindings.findChildViewById(rootView, id);
      if (pickupType == null) {
        break missingId;
      }

      id = R.id.timeLayout;
      TextInputLayout timeLayout = ViewBindings.findChildViewById(rootView, id);
      if (timeLayout == null) {
        break missingId;
      }

      id = R.id.typeLayout;
      TextInputLayout typeLayout = ViewBindings.findChildViewById(rootView, id);
      if (typeLayout == null) {
        break missingId;
      }

      id = R.id.weightInput;
      TextInputEditText weightInput = ViewBindings.findChildViewById(rootView, id);
      if (weightInput == null) {
        break missingId;
      }

      id = R.id.weightLayout;
      TextInputLayout weightLayout = ViewBindings.findChildViewById(rootView, id);
      if (weightLayout == null) {
        break missingId;
      }

      return new PackageDetailsFragmentBinding((RelativeLayout) rootView, btnNext,
          descriptionLayout, div2, div3, div4, div5, hideFor, packageDescription, pickupDate,
          pickupDateLayout, pickupTime, pickupType, timeLayout, typeLayout, weightInput,
          weightLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
