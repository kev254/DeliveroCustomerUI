// Generated by view binder compiler. Do not edit!
package com.delivero.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.delivero.customer.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VehicleItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ShapeableImageView select;

  @NonNull
  public final MaterialTextView typeCount;

  @NonNull
  public final MaterialTextView typeName;

  @NonNull
  public final ShapeableImageView vehicleItem;

  private VehicleItemBinding(@NonNull RelativeLayout rootView, @NonNull ShapeableImageView select,
      @NonNull MaterialTextView typeCount, @NonNull MaterialTextView typeName,
      @NonNull ShapeableImageView vehicleItem) {
    this.rootView = rootView;
    this.select = select;
    this.typeCount = typeCount;
    this.typeName = typeName;
    this.vehicleItem = vehicleItem;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VehicleItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VehicleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.vehicle_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VehicleItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.select;
      ShapeableImageView select = ViewBindings.findChildViewById(rootView, id);
      if (select == null) {
        break missingId;
      }

      id = R.id.typeCount;
      MaterialTextView typeCount = ViewBindings.findChildViewById(rootView, id);
      if (typeCount == null) {
        break missingId;
      }

      id = R.id.typeName;
      MaterialTextView typeName = ViewBindings.findChildViewById(rootView, id);
      if (typeName == null) {
        break missingId;
      }

      id = R.id.vehicleItem;
      ShapeableImageView vehicleItem = ViewBindings.findChildViewById(rootView, id);
      if (vehicleItem == null) {
        break missingId;
      }

      return new VehicleItemBinding((RelativeLayout) rootView, select, typeCount, typeName,
          vehicleItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
